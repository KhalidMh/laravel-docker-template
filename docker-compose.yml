name: project

networks:
  project:
    name: project
  # app-shared:
  #   name: app-shared
  #   external: true

volumes:
  mysql_db: 
    
services:
  # nginx configuration
  app:
    build:
      context: ./docker/nginx
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: project_nginx
    ports:
      - ${NGINX_PORT:-8000}:80
    volumes:
      - ./api:/var/www/html:delegated
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    # labels:
    #   - "traefik.http.routers.project_nginx.rule=Host(`project.localhost`) && PathPrefix(`/api`)"
    #   - "traefik.docker.network=app-shared"
    #   - "traefik.enable=true"
    depends_on:
      - mysql
      - php
      - vue
      # - redis
      # - mailpit
    networks:
      - project
      # - app-shared
    restart: unless-stopped

  # php configuration    
  php:
    image: php_image:latest
    build:
      context: ./docker/php
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: project_php
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./api:/var/www/html:delegated
      - ./docker/php/start.sh:/usr/local/bin/start.sh
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      # - ./docker/php/opcache.ini:/usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
      # - ./docker/php/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    command: /usr/local/bin/start.sh
    networks:
      - project
      # - app-shared
    restart: unless-stopped

  # mysql configuration    
  mysql:
    image: mysql:8.0
    container_name: project_mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    tty: true
    ports:
      - ${MYSQL_PORT:-3307}:3306
    volumes:
      - mysql_db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-project}
      MYSQL_USER: ${DB_USERNAME:-project}
      MYSQL_PASSWORD: ${DB_PASSWORD:-project}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - project

  # redis configuration
  redis:
    image: redis:alpine
    container_name: project_redis
    restart: unless-stopped
    ports:
      - ${REDIS_PORT:-6379}:6379
    networks:
      - project
    
  # vue configuration
  vue:
    image: node:20-alpine
    container_name: project_vue
    volumes:
      - ./client/:/app
      - ./docker/vue/start.sh:/usr/local/bin/start.sh
    # labels:
    #   - "traefik.http.routers.project_vue.rule=Host(`crm.localhost`)"
    #   - "traefik.docker.network=app-shared"
    #   - "traefik.enable=true"
    ports:
      - ${VUE_PORT:-3000}:3000
    working_dir: /app
    command: /usr/local/bin/start.sh
    networks:
      - project
      # - app-shared
    restart: unless-stopped
  
  # mailpit configuration
  # mailpit:
  #   image: axllent/mailpit
  #   container_name: project_mailpit
  #   # labels:
  #   #   - "traefik.enable=true"
  #   #   - "traefik.http.routers.project_mailpit.rule=Host(`emails.crm.localhost`)"
  #   #   - "traefik.http.services.mailpit.loadbalancer.server.port=8025"
  #   #   - "traefik.docker.network=app-shared"
  #   ports:
  #     - ${MAILPIT_DASHBOARD_PORT:-8025}:8025
  #     - ${MAILPIT_PORT:-1025}:1025
  #   networks:
  #     - project
  #     - app-shared
  #   restart: unless-stopped

  # npm command configuration
  npm:
    image: node:20-alpine
    container_name: project_npm
    user: ${UID:-1000}:${GID:-1000}
    volumes:
      - ./client/:/app
    working_dir: /app
    entrypoint: [ 'npm' ]
    networks:
      - project

  # artisan commmande configuration
  artisan:
    image: php_image:latest
    container_name: project_artisan
    working_dir: /var/www/html
    volumes:
      - ./api:/var/www/html:delegated
    entrypoint: [ 'php', 'artisan' ]
    networks:
      - project
  
  # compser commmande configuration
  composer:
    image: php_image:latest
    container_name: project_composer
    working_dir: /var/www/html
    volumes:
      - ./api:/var/www/html
    entrypoint: [ 'composer' ]
    networks:
      - project
